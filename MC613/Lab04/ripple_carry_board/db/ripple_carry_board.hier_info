|ripple_carry_board
SW[0] => ripple_carry:rp_adder.y[0]
SW[0] => bin2hex:y_hex.bin[0]
SW[1] => ripple_carry:rp_adder.y[1]
SW[1] => bin2hex:y_hex.bin[1]
SW[2] => ripple_carry:rp_adder.y[2]
SW[2] => bin2hex:y_hex.bin[2]
SW[3] => ripple_carry:rp_adder.y[3]
SW[3] => bin2hex:y_hex.bin[3]
SW[4] => ripple_carry:rp_adder.x[0]
SW[4] => bin2hex:x_hex.bin[0]
SW[5] => ripple_carry:rp_adder.x[1]
SW[5] => bin2hex:x_hex.bin[1]
SW[6] => ripple_carry:rp_adder.x[2]
SW[6] => bin2hex:x_hex.bin[2]
SW[7] => ripple_carry:rp_adder.x[3]
SW[7] => bin2hex:x_hex.bin[3]
HEX4[0] << bin2hex:x_hex.hex[0]
HEX4[1] << bin2hex:x_hex.hex[1]
HEX4[2] << bin2hex:x_hex.hex[2]
HEX4[3] << bin2hex:x_hex.hex[3]
HEX4[4] << bin2hex:x_hex.hex[4]
HEX4[5] << bin2hex:x_hex.hex[5]
HEX4[6] << bin2hex:x_hex.hex[6]
HEX2[0] << bin2hex:y_hex.hex[0]
HEX2[1] << bin2hex:y_hex.hex[1]
HEX2[2] << bin2hex:y_hex.hex[2]
HEX2[3] << bin2hex:y_hex.hex[3]
HEX2[4] << bin2hex:y_hex.hex[4]
HEX2[5] << bin2hex:y_hex.hex[5]
HEX2[6] << bin2hex:y_hex.hex[6]
HEX0[0] << bin2hex:r_hex.hex[0]
HEX0[1] << bin2hex:r_hex.hex[1]
HEX0[2] << bin2hex:r_hex.hex[2]
HEX0[3] << bin2hex:r_hex.hex[3]
HEX0[4] << bin2hex:r_hex.hex[4]
HEX0[5] << bin2hex:r_hex.hex[5]
HEX0[6] << bin2hex:r_hex.hex[6]
LEDR[0] << ripple_carry:rp_adder.overflow


|ripple_carry_board|ripple_carry:rp_adder
x[0] => full_adder:initial_stage.x
x[1] => full_adder:intermediate_stages:1:intermediate.x
x[2] => full_adder:intermediate_stages:2:intermediate.x
x[3] => full_adder:intermediate_stages:3:intermediate.x
y[0] => full_adder:initial_stage.y
y[1] => full_adder:intermediate_stages:1:intermediate.y
y[2] => full_adder:intermediate_stages:2:intermediate.y
y[3] => full_adder:intermediate_stages:3:intermediate.y
r[0] <= full_adder:initial_stage.r
r[1] <= full_adder:intermediate_stages:1:intermediate.r
r[2] <= full_adder:intermediate_stages:2:intermediate.r
r[3] <= full_adder:intermediate_stages:3:intermediate.r
cin => full_adder:initial_stage.cin
cout <= full_adder:intermediate_stages:3:intermediate.cout
overflow <= overflow.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:rp_adder|full_adder:initial_stage
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:rp_adder|full_adder:\intermediate_stages:1:intermediate
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:rp_adder|full_adder:\intermediate_stages:2:intermediate
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|ripple_carry:rp_adder|full_adder:\intermediate_stages:3:intermediate
x => r.IN0
x => cout.IN0
x => cout.IN0
y => r.IN1
y => cout.IN1
y => cout.IN0
r <= r.DB_MAX_OUTPUT_PORT_TYPE
cin => r.IN1
cin => cout.IN1
cin => cout.IN1
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:x_hex
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
hex[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:y_hex
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
hex[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|ripple_carry_board|bin2hex:r_hex
bin[0] => Mux0.IN19
bin[0] => Mux1.IN19
bin[0] => Mux2.IN19
bin[0] => Mux3.IN19
bin[0] => Mux4.IN19
bin[0] => Mux5.IN19
bin[0] => Mux6.IN19
bin[1] => Mux0.IN18
bin[1] => Mux1.IN18
bin[1] => Mux2.IN18
bin[1] => Mux3.IN18
bin[1] => Mux4.IN18
bin[1] => Mux5.IN18
bin[1] => Mux6.IN18
bin[2] => Mux0.IN17
bin[2] => Mux1.IN17
bin[2] => Mux2.IN17
bin[2] => Mux3.IN17
bin[2] => Mux4.IN17
bin[2] => Mux5.IN17
bin[2] => Mux6.IN17
bin[3] => Mux0.IN16
bin[3] => Mux1.IN16
bin[3] => Mux2.IN16
bin[3] => Mux3.IN16
bin[3] => Mux4.IN16
bin[3] => Mux5.IN16
bin[3] => Mux6.IN16
hex[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


